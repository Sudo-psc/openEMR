version: '3.1'

services:
  mysql:
    restart: always
    image: mariadb:11.4
    command: ['mariadbd','--character-set-server=utf8mb4']
    volumes:
    - databasevolume:/var/lib/mysql
    - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # Usando variável de ambiente

    healthcheck:
      test:
      - CMD
      - /usr/local/bin/healthcheck.sh
      - --su-mysql
      - --connect
      - --innodb_initialized
      start_period: 1m
      start_interval: 10s
      interval: 1m
      timeout: 5s
      retries: 3

  couchdb:
    restart: always
    image: couchdb:3
    environment:
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
    volumes:
      - couchdb_data:/opt/couchdb/data
    ports:
      - 5984:5984

  openemr:
    restart: always
    image: openemr/openemr:7.0.3
    ports:
    - 80:80
    - 443:443
    volumes:
    - logvolume01:/var/log
    - sitevolume:/var/www/localhost/htdocs/openemr/sites
    - ./apache/servername.conf:/etc/apache2/conf.d/servername.conf:ro
    environment:
      MYSQL_HOST: mysql
      MYSQL_ROOT_PASS: ${MYSQL_ROOT_PASSWORD} # Usando variável de ambiente
      MYSQL_USER: ${MYSQL_USER}             # Usando variável de ambiente
      MYSQL_PASS: ${MYSQL_PASS}             # Usando variável de ambiente
      OE_USER: ${OE_USER}                 # Usando variável de ambiente
      OE_PASS: ${OE_PASS}                 # Usando variável de ambiente
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test:
      - CMD
      - /usr/bin/curl
      - --fail
      - --insecure
      - --location
      - --show-error
      - --silent
      - https://localhost/
      start_period: 3m
      start_interval: 10s
      interval: 1m
      timeout: 5s
      retries: 3

  nginx:
    restart: always
    image: nginx:alpine
    ports:
    - 80:80
    - 443:443
    volumes:
    - ./nginx/nginx-fallback.conf:/etc/nginx/nginx.conf:ro
    - ./ssl/openemr.crt:/etc/ssl/certs/openemr.crt:ro
    - ./ssl/openemr.key:/etc/ssl/private/openemr.key:ro
    - certbot_certs:/etc/letsencrypt
    - certbot_www:/var/www/certbot
    - ./nginx/health.html:/opt/health_status/health.html:ro # New mount for health.html
    depends_on:
    - openemr

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

  php-fpm:
    image: php:8.2-fpm-alpine
    restart: always
    volumes:
      - ./php:/var/www/html

volumes:
  logvolume01: {}
  sitevolume: {}
  databasevolume: {}
  certbot_certs: {}
  certbot_www: {}
  couchdb_data: {}
